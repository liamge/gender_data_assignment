<abstract><heading>Abstract</heading>Robot football provides a fertile environment for development of artificial intelligence techniques. One of most interesting but in the same way the most demanding technique is designing strategy for football robot team. In order for a robot team to actually perform a soccer game, various technologies must be incorporated including: design principles of autonomous agents, multi-agent collaboration, strategy acquisition and real-time reasoning. Match is a task for a team of multiple fast-moving robots under a dynamic environment. </abstract><heading>Aim </heading>Aim of this project is to investigate strategy for team of football robots. And potentially investigate Bluetooth communication between robots. <heading>Background</heading>The idea of creating robots is as old, or even older than all computer science. Artificial people, iron people, androids, etc are as frequent in ancient myths ( eg. myth of Pygmalion ) and fairytales (eg. "The Wonderful Wizard Of Oz", L Frank Bum) as their next of kin - robots are now. But what does a word robot mean? It comes from the Czech word robota, industrial labour. The word has first appeared in Karel Čapek's science fiction play R.U.R. (Rossum's Universal Robots) in 1921, and has probably been invented by author's brother, painter Josef Čapek. According to Internet encyclopaedia Wikipedia: <quote>"The word robot is used to refer to a wide range of machines, the common feature of which is that they are all capable of movement and can be used to perform physical tasks. Robots take on many different forms, ranging from humanoid, which mimic the human form and way of moving, to industrial, whose appearance is dictated by the function they are to perform. Robots can be grouped generally as mobile robots (e.g. autonomous vehicles), manipulator robots (e.g. industrial robots) and Self reconfigurable robots, which can conform themselves to the task at hand.  Robots may be controlled directly by a human, such as remotely-controlled bomb-disposal robots, robotic arms, or shuttles, or may act according to their own decision making ability, provided by artificial intelligence. However, the majority of robots fall in-between these extremes, being controlled by pre-programmed computers. Such robots may include feedback loops such that they can interact with their environment, but do not display actual intelligence.. "</quote>The last paragraph treats on the same kind of robot which I will investigate in my project. The Miniature Intelligent Autonomous ro BOT - Blue Tooth (MIABOT BT) is a fully autonomous miniature mobile robot. It uses bi-directional Bluetooth communications, which provides a robust frequency hopping wireless communications protocol at 2.4GHz. By usage of this feature, MIABOT communicates with central computer which makes decisions based on the video analysis. To make it even more complicated my project will be not about one but about 3 robots playing in one team against other 3 robots. The idea is pretty easy: create a team of robots capable to play football. It was initiated by Jong-Hwan Kim, KAIST, Korea in 1995 from International Organizing Committee, and previously was named: Micro-Robot World Cup Soccer Tournament. It finally changed name in 1996 to Federation of International Robot-soccer Association (FIRA). Since then the concept evaluated and 6 tournaments has been played all over the world. Depending on robot types tournaments have been classified into 7 categories: <list>Humanoid Robots (HUROSOT)Khepera Robots (KHEPERASOT & S-KHEPERASOT)Micro Robots (MIROSOT)ROBOSOTNano Robots (NAROSOT)QUADROSOTSimulation of robots strategy (SIMUROSOT)</list>The MIABOT BT, which I will be developing, belongs to MIROSOT, what means it is nit more than 7.5cm x 7.5cm x 7.5cm. Some academic research about this robot soccer prototype is made under supervision of Dr. Olivier C.L. Haas from Control Theory and Application Centre (CTAC). My project is only a small part of whole research but it is also one of most significant. My first aim will be to declare how a single robot should approach the ball and how it should behave in reaction with environment. My final target will be to develop strategy for entire three-robot football team. Most of my work should include programming in C++. Without the written software robots are not be able to cooperate or even move. The aim is to create a tightly-collaborative and successful team of three separate robots. And finally it will make a truly autonomous system of 3 MIABOT's which should be able to play robot football without any human supervision. <heading>Critical review of relevant literature</heading>Before coming into details of my project I would like to introduce the reader to the robot and the system itself. System is relatively easy to understand: <picture/><list>Images from Firewire Camera are analysed by Computer.PC finds tracks and predicts paths of specified objects (ball, players) based on images.After analysing the data orders are send by Bluetooth to single robots.Robots start moving, and the same algorithms repeats.</list><heading>MIABOT BT</heading>That means that robots they own do not make any decisions, and all they have to do is to move in directions provided by the central computer. But is it necessary for the computer to make all decisions? Maybe the robots can do part of the work on they own, maybe they should use some of their features to improve the system. Let us have a look at robot's architecture due to MIABOT user manual: <table/><heading>Processor</heading>"Brain" of MIABOT is Atmel ATMega8 microprocessor. "The ATmega8 is a low-power CMOS 8-bit microcontroller based on AVR RISC architecture. By executing powerful instructions in a single clock cycle, the ATmega8 achieves throughputs approaching 1 MIPS per MHz, allowing the system designer to optimize power consumption versus processing speed. "(Atmel Corporation, 2006). This microchip is very efficient and at the same time relatively easy to control. Additionally it contains 32 general purpose registers and 3 flexible timers. All this features suggest that this unit is capable to do much more than following the orders. <heading>Motion</heading><picture/>MIABOT has 2 wheels both of which have their own engines and control systems and can move independently. Thanks to that robot can change directions of movement. Engines power enables robot to move with maximal speed of 1m/s. (Merlin Systems Corp. Ltd) <heading>Communication Bluetooth</heading><quote>"Mobile robots need to communicate with their base station, with one another, and with humans. Most robot electronic communication systems employed in the past use radio frequency, transmitters and recivers. Currently, many mobile robots working both indoor and outdoor environments use wireless communication Wi-Fi (Bekey, 2005).</quote>MIABOT BT's are supplied ready to support Bluetooth communications at 19200 bps. Accordingly to Bluetooth specification single PC can communicate via Bluetooth with 7 robots at the same time. But why use Bluetooth? "From the user's point of view, there are three important features to Bluetooth: It's wireless. When you travel, you don't have to worry about keeping track of a briefcase full of cables to attach all of your components, and you can design your office without wondering where all the wires will go.  It's inexpensive. You don't have to think about it. Bluetooth doesn't require you to do anything special to make it work. The devices find one another and strike up a conversation without any user input at all. "(Franklin, 2004) Thanks to these features central computer can be easily connected to each agent using separate, independent parallel connection. That is why Windows default tool - HyperTerminal can be used to send commands to agents. <heading>Development and Programming</heading>To program the robot I decided to use C++. The C High-level Language has become increasingly popular for programming microcontrollers. The advantages of using C compared to assembler are numerous: <list>Reduced development timeEasier maintenance and portabilityEasier to reuse code </list>But nothing comes for free, C has larger code size and as a result of that often reduced speed. To reduce these penalties the AVR architecture is tuned to efficiently decode and execute instructions that are typically generated by C compilers. The result of the cooperation between the compiler development team and the AVR development team is a microcontroller for which highly efficient, high performance code is generated. (Atmel Corporation, 2003). <heading>Single robot motion</heading>According to MIABOT manual this robot can decode few commands as: <list>StopTestFlashMove and turn in various directions with set speed and distanceSet power-level for all movement or turn operationsControl wheel speed and power</list>Making MIABOT autonomous requires ability to plan motions to be developed automatically, by composition of known commands. Fortunately I can assume that my robot will move in laboratory, where nothing unexpected should happen. Even though, "it would certainly be useful to incorporate automatic motion planning tools in off-line robot programming systems. This would allow the user to specify tasks more declaratively, by stating what he/she wants done rather than how to do it. As robots become more dexterous, the need for motion planning tools will become more critical. " (Latombe, 1991) <heading>Multiple robot path planning</heading>Even though robot will be autonomous it does not mean that whole team will be. To achieve autonomous team, the system has to be able to plan paths of all units. There are a few different approaches to multiple robot path planning: Path planning is either centralised - with a universal path-planner making decisions, or distributed - with individual agents planning and adjusting their paths (Fujimara, 1991) Path planning is either centralised (as above), distributed (as above), or hybrid - combination of online, offline centralized or decentralized (Arai et al, 1992) Path planning is either centralised - takes into account all robots, or decoupled - planning the paths for each robot independently (Latombe, 1991) Finally there has to be a set of rules, and concepts, how the paths should be found - strategy. <heading>Strategy</heading><quote>"The word derives from the Greek stratēgos, which referred to a 'military commander' during the age of Athenian Democracy.  Strategy is an umbrella plan encompassing a number of smaller plans for some objective."(Wikipedia Free Online Encyclopaedia)</quote>Strategy of the team depends on the position of every robot and the ball. According to the position of robots and the ball in the game field, computer can decide which strategy can be used. To choose the strategy, system should perform the following steps to accomplish the algorithm: <list>Check attacking direction Check position of the ball and predict its motionCheck position of all robots with prediction of their movementsCheck primary position of team membersDecide which strategy should be used (defensive, offensive)Check if robot will not break the rules of the gameSend appropriate orders to each robot player </list>Other variables such as size of robot, ball or game field should also be considered.(Bingrong et al) <heading>Objectives</heading>Objectives of this project are to: <list>Gather and analyse available literature and previous researches concerning the topicImplement simple commends and programmes on robots in laboratoryInvestigate how a single robot should attack the ballFigure the way for the robots to cooperateModel the best strategy in simulation modeImplement the strategy in physical system Investigate the efficiency of default microcontroller programme and my programmeEstimate if Bluetooth communication between team members will improve efficiencyImplement the final strategy on robot football team</list><heading>Research Methods</heading><table/><heading>Phase 1: Analysis of available data</heading>First I will review relevant literature concerning following topics to find as much useful information as possible: <list>Robot motionRobot cooperationAVR microprocessors architecture and programmingMIABOT BTTeam games strategyC/C++ programme efficiencyBluetooth connections</list>After that I should be ready to gain more specified knowledge from Dr Olivier Haas. This phase should allow me to gather essential data concerning the project. <heading>Phase 2: Software studies</heading>In this phase I should start to program the physical robot. I will use the robot laboratory tasks to learn everything that is necessary about single robot's motion. Starting from really basic commends I will finish at the stage when robot can autonomously approach the ball. The whole phase should be done under the supervision of Dr Haas. <heading>Phase 3: Strategy investigation</heading>First of all, because single MIABOT is already able to move, I will try to make 3 robots move simultaneously but independently. Than I shall reach the toughest part of the project: strategy. To figure which strategy is the best I will have to try a few different variants, test them on simulation programme. Finally I shall implement it on the physical system to figure if it is working correctly. <heading>Phase 4: Analysis of Bluetooth and programmes' code efficiency</heading>At this stage of research I will try to optimise my programme. This includes the programme I wrote as well as the one that was already implemented in microcontroller. Afterwards, I will implement the Bluetooth communication between robot team members, which shall allow robots to exchange information without help of central computer. Finally I will check if this solution will improve efficiency of the system, which will help me to choose final programme. <heading>Phase 5: Final tests and Reports</heading>My final phase will include implementation and testing of the improved programme on physical system. At this stage I will concentrate at writing my project report. <heading>Project Plan</heading><figure/>