<heading>Description of site architecture</heading>When designing the site's layout, our primary concern was usability and navigation. Interface is made as simple and intuitive as possible, so that users can perform tasks quickly and effectively without having to deal with complex controls or navigation. The quality and amount of information the site provides has linked directly to the information looked by used during a typical purchase (or digital window shopping). Site provide end users with all the information necessary to purchase our company's products, as well as company background information, and thus satisfy the requirement of providing customers with all the information they need without ever leaving the site, and without having to contact the company directly, via phone or otherwise. <heading>Site theme</heading>The site has a consistant theme incorporating the corporate colours of the vantage brand. Aesthetics of the site clearly reflect the image of the organization the website was designed to support. The need to establish a common theme that would apply to all pages throughout the site was imposed by the requirement specification. The website's "look and feel" was determined by the overall experience we wanted to provide users with, as well as the image that the company wishes to project to its client base and potential customer base; that of a prestigious maker of luxurious vessels of the finest quality. CSS was widely used in to theme the site fonts. Site wide changes to fonts can easly changes by changing the CSS file. All images are of high quality and "web optimized" using PhotoShop so download time is reduced while nearly maintaing the same quality. <heading>Page layout</heading>The page layout stays consitant as well though all pages. Consistent look and feel throughout the entire site is maintained, so that users are never confused. Page title indicaltes where exactly the user is.The intuitive navigation links provide users with an easy way to navigate the site regardless of which page they are currently viewing. Page contents are either static or static + dynamic content. Dynamic contents are retrived from the database (such as prices and item descriptions). Page templates are used on all pages. The appearance attributes of the template were determined using the same guidelines used for the site's theme. The templates are the header template (which includes navigation links and header [logo+page title]) and footer template (copyright). The contents are either static or static + dynamic. Since these templates are shares on all pages, any changes to thse two files will reflect on all pages. This makes content management and site expansion easier. <figure/><heading>Site Flow Diagram</heading><figure/><heading>Description of design and construction process</heading><heading>Operation overview</heading><figure/><heading>File descriptions</heading><table/>The site is designed such so in terms of performance and efficiency, the site behaves very well. Database writing is done at the end after confirming all the purchase details. MySQL functions (automatic fields sucha s time stamp and auto increment) are used so php codeing is minimised and code is kept simple. The primary design concern was to minimize errors as much as possible even when the user tries to make an error. The design is so efficient that the only place the user can make a mistakes is when the user actually selects the wrong products and purchases or enters wrong information in the payment page. <heading>Main operations</heading><heading>Template operation</heading>Common header & navigation and footer HTML code is stored in two diffeerent files. At each page the header & navigation is printed before displaying the contents (static or dynamic). After the contents are displayed the footer is displayed. <figure/><heading>Web site theme operation</heading>Web site's theme text and link decorations were done using the CSS file. CSS file summary: <list>Page body: whiteParagraph text: first-letter font-size:x-largePage Title text: font-size: large; ;color: #000000 [black]Navigation Link text: font-size: medium color: #FFFFFF [white] Navigation Link text [hover]: font-size: medium; color:#FF000 [red]Link in body text: font-size: small; font-weight: none; color: #0000CC [light blue], underlinedLink in body text [hover]: font-size:small, color: #FF0000 [red], underlinedFooter text: font-size: xx-small; color:#666666 [light grey]; letter-spacing: 3pixlesBody text: font-size: medium; color: #333333 [grey]Table titles: font-size: small; color: #333333 [ dark grey] font-weight: boldTable text: font-size: small; color: #333333[dark grey]Date: font-size: small, color: #666666 [light grey]Error messages (during input errors): color: #CC0000[red]</list><heading>Dynamic content operation</heading>Whenever a page displays any data that contains information about options and yacth models the MySQL database is queried and data is retried at real time (including the boat image url). This is another feature that makes content management easier. When the database is updated the changes are automatically reflected in the pages. Only the yacth models are stored in the staticvars.php file. Chnageing yatch models is as easy as changing this file and updating the database. <heading>Date and shopping cart status</heading>In all pages the current date and the shopping cart status is displayed. Shopping cart status displayed the number of items in the cart. <heading>Hit counter operation</heading>Hits are calculated for each session instead of page hits to record accurate hits. When a user accesses any page a session is created and a session variable is set and hits table is updated. All pages checks for the existance of this variable. <heading>Cookie operation</heading>The vantage cookie is set automatically when a user enters any page (in addition to the session cookie which is automatically set). At each page the php script checks for the cookie variable to check if the cookie is set. If no cookie variable is found the cookie is set if the cookie does not already exist at the user's machine. <heading>Shopping basket operation</heading>The shopping basket is held in an associative array. When a user goes to selects a yacth the array is created if does not exist and first index is set as the yacth model. If the user goes back and changes the yatch model the first index is updated (overwritten). Then the user is redirected to the options page When a user selects option(s) from the options page, the selected options are set in the shopping basket associative array after deleting any elements in the array except the first index (the yatch model) . Since the values are deleted in the array the options get updated when the user chooses to change the options. <heading>Shopping basket operation navigation</heading>Each page checks for the session. If the session does not exist it means that the session is destroyed and a purchase has been already done (since the only place the session gets terminated is after purchase to prevent the user going back to change details). The navigation during the shopping basket operation is only available thought navigation buttons in body and are not available in the site wide navigation, since each page depends on the information of the previous page. However user may visit other links and still come back to the shopping basket operation page which the user initially left. <heading>Database writing operation</heading>The data is written to the MySQL database only after the user has confirmed the order. Untill then all values are stored in session variables or global variables. Any changes dones is updated in the variables and time consuming database operations are avoided for each time the user changes purchase information (such as changing boat name,address, etc). <heading>Payment page operation</heading>During the payment input fields are validated as much as possible since this is the only page user inputs data through the keyboard (therefore highest number of errors). In all other pages user is unable to make any mistakes (execept deciding on the wrong model/options ofcourse). <list><heading>Validation summary:</heading>Full name: Blank field checkAddress 1: Blank field checkAddress 2: (No validation)Credit card number: All values numeric check, Blank field checkCredit card security code: All values numeric check, Blank field checkCredit card type (drop down menu): Black field check</list>The values in the fields are saved in global variables so when the page is reloaded (either when the user decides to change the information or during validation errors) the old values are automatically printed in the fields. <heading>Comments collection</heading>Comments are optional to the user. If the user is interested in leaving a comment the textwndow is presented at the end of the purchase. Only when the user clicks the submit button the comments gets updated in the tables. Else comment is left blank in the table. <heading>Database update operations</heading>Maxinum advantage of MySQL features were taken to automate and minimise expensive php codeing and validation. During purchase the date and time is automatically obtained within mysel using the current time stamp function. Purchase and customer primary keys were made to auto increment so manual calculation of these fields were eliminated. <heading>Destroying session</heading>Once a purchase is done the session is destroyed so the user is unable to go back. If the user tries to g back en error is displayed the session is destroyed. This is done because the database is already updated when the purchase is done and some MySQL tables have auto increment fields. And extensive validation coding would be required if the user tries to change the information after a purchase (such as changing boats etc). <heading>Calculating total purchases</heading>The number is rows in the purchase table indicates the number of purchasing visits. The count is displayed at the purchase summary page as required. <heading>Test summary report</heading>Extensive debugging was done the during codeing process. Printf statements were used extensively to observe the contents of the variables and during database updation tables were monitored at the mysql prompt using SELECT statements. Therfore only the functional requiremets were documented in the test report. <table/><heading>Database table creation code</heading> FORMULA  <heading>Critique of the site</heading>After evaluating the site against the coursework specification, we found that the end product satisfies the requirements set out in the specification. All the facilities identified in the requirements have been implemented, and behave as expected. However there are limitation to the site and the operations currently done can be further improved. <heading>One purchase</heading>The main drawback is that purchase of only one yatch at a time is currently possible. It was assumed that the since new luxuary yachts are quite expensive purchase of more than one yacth is most unlikely. <heading>Multiple database queries</heading>At each page where database values are queried, they are not saves in variables so that second time the values are needed(such as page reload or another page), those same values need to retrived from the database again (which is an expensive operation). <heading>HTML Code optimization</heading>HTML code could have been further optimized by the use of CSS. All tables (or the entire site) could have been done though CSS. <heading>php code optimization</heading>Php code could be futher optimized by the inserting repeated code in the common functions.php file. There could be the possiblity of writing better algorithms as well (such as for discount calculation). <heading>Search engine optimization</heading>Site can be optimized for maximum search engine visiblity.This could have been done by carefully selecting page titles,hyper links tags, embedding META tags, etc. <heading>Search function/site map/text only version</heading>Site lacks a search function,text only version (for thin browers) and a site map page which should be typically available in all ecommece sites. <heading>More information</heading>The site can provide more interesting information such as boating guidelines, safey information, how to choose a boat so that users will come back to site. <heading>Data protection policy</heading>Site lacks a data protection policy which is the first thing that need to be done if user information is to be collected and stored. <heading>Secure payment</heading>Site lacks secure payment opearion and PayPal compatibility. <heading>Tutor interactions on the site</heading><list>Selected yatch model: 85VSSelected options: 1, 2, 3 Entered Full name: Prof BeardEntered address 1: Funny HouseEntered address 2: OxfordshireEntered creditcard no: 21474833647Entered security code: 22Selected card type: VisaEntered comment: Nice site. But the boat won't fit in my drive. Auto generated valuesCustomer code: 108Purchase ID: 102Time stamp: 2006-04-26 13:19:39</list><table/>