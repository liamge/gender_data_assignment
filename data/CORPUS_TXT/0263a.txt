<heading>Question 1</heading>The system equations, given that the initial conditions are zero, are  FORMULA  and  FORMULA  with  FORMULA  and  FORMULA  and observation  FORMULA . <heading>Question 2</heading>These system equations may be written in matrix form as follows:  FORMULA  and  FORMULA . Note that  FORMULA , i.e. an impulsive input, therefore:  FORMULA  and  FORMULA . <heading>Question 3</heading> FORMULA .  FORMULA . Hence  FORMULA .  FORMULA   FORMULA   FORMULA   FORMULA  The stiffness factor is given by  FORMULA .Hence the overall stiffness factor is  FORMULA . <heading>Question 4</heading> FORMULA ,  FORMULA  and  FORMULA .  FORMULA  with  FORMULA .  FORMULA  FORMULA . Hence  FORMULA .  FORMULA  Using partial fractions:  FORMULA   FORMULA . Comparing left and right hand sides, there are no s terms on the left hand side, therefore  FORMULA  in order for them to cancel on the right hand side.  FORMULA   FORMULA . Substituting then taking the inverse Laplace transform gives:  FORMULA   FORMULA . <heading>Question 5</heading>As the system in question is a two-compartment model with exponential decay, y(t) can be expressed as:  FORMULA  for  FORMULA  and  FORMULA . Factoring out the smallest component gives:  FORMULA . If  FORMULA , for large t the last term becomes negligible. Taking logs gives:  FORMULA . Plotting log y(t) against t on semi-log paper allows 2 and log A2 to be determined from the gradient and y-intercept respectively. The plot below was created using the following MatLab code: <quote>Data = [0 0 4320 1.395e-8 8700 1.182e-8 12900 1.250e-8 16800 1.177e-8 22800 1.141e-8 30900 1.009e-8 74700 8.505e-9]; t = Data(:,1); y = Data(:,2); plot(t, log(y));</quote><figure/>The y-intercept is at -18.29 so  FORMULA . The gradient can be found from two data points:  FORMULA . z(t) can then be defined as:  FORMULA . Again, assuming  FORMULA , for large t the last term becomes negligible. Taking logs gives:  FORMULA . Plotting log z(t) against t on semi-log paper allows 1 and log A1 to be determined from the gradient and y-intercept respectively. The plot below was created using the following MatLab code: <quote>Data = [0 0 4320 1.395e-8 8700 1.182e-8 12900 1.250e-8 16800 1.177e-8 22800 1.141e-8 30900 1.009e-8 74700 8.505e-9]; t = Data(:,1); y = Data(:,2); z = y - exp(-18.29)*exp(-3.902e-006*t); plot(t, log(z));</quote><figure/>A linear best-fit approximation was used to obtain values of the y-intercept and gradient as follows: The y-intercept is at -19.426 so  FORMULA . The gradient is simply 9.135 10 -5 so  FORMULA . In order to use the Nelder-Meade Simplex algorithm, a column vector of the values was set up and then the algorithm was iterated until a best fit was obtained. The values are (10 -5) and (10 -6), hence selecting a tolerance of 10 -6 means that the tolerance is at least that of the smallest value magnitude; this is the lowest acceptable tolerance and no higher tolerance is required hence it is a reasonable choice in this case. <quote>lam = [3.902e-006; 9.135e-005]; x = fminsearch('fitfunc2', lam, optimset('Tolx', 1e-6))</quote><figure/>Substituting the values obtained here back into the exponential equation gives:  FORMULA . <heading>Question 6</heading>Laplace transforming the equation from question 5 above gives:  FORMULA . From the question paper,  FORMULA  so  FORMULA ; also  FORMULA . Substituting these values into the equation obtained in section 4 and comparing to the above equation gives:  FORMULA  By comparison,  FORMULA  and  FORMULA . Substituting these values gives:  FORMULA   FORMULA . There is also an alternative if the values of are substituted the other way around:  FORMULA  By comparison,  FORMULA  and  FORMULA . Substituting these values gives:  FORMULA   FORMULA . Hence the possible solution sets are: <list><heading>Set 1:</heading> FORMULA  FORMULA  FORMULA .</list><list><heading>Set 2:</heading> FORMULA  FORMULA  FORMULA .</list><heading>Question 7</heading>The two sum of exponential curves obtained in questions 4 and 5 are as follows:  FORMULA . Obtained by substituting values of  FORMULA  and  FORMULA  (as given on the question paper) and  FORMULA  (as calculated in question 6) into equation from question 4:  FORMULA .  FORMULA . These equations were plotted in MatLab using the following code: <quote>t = 0:1000:75000; y1 = 1.3368e-008*(exp(-5.00e-006*t)-exp(-1.80e-003*t)); y2 = 1.3347e-008*exp(-6.7598e-006*t)-1.3347e-008* exp(-8.6085e-003*t); data = [y1; y2]; plot (t, data) plot (t, abs(y1-y2))</quote><figure/>data1 is the plot of the model generated theoretically in question 4; data2 is the plot of the model generated using the Nelder-Meade simplex algorithm in question 5. Both models provide a reasonable match to most of the data, however the difference between the two methods can be seen below: <figure/>The magnitude of the difference spikes initially very early on, however it rapidly drops and then increases more gradually over time. This suggests that the models diverge over time; assuming the trend continues, this means that eventually one model is likely to provide a far better fit to the data than the other. In this case, it appears that, while data1 gives a smoother fit, data2 takes account of the detailed experimental data and therefore initially fits the data very well. However, as data2 takes account only of the provided experimental values whereas data1 uses the average values over time, it is likely that data1 would provide a much better fit after a significant period of time. 