<heading>PART A: THE BRACKETING METHOD</heading><heading>T HEORY</heading>The bracketing method is a simple, iterative method. It is used to find the root or roots of a function, or in other words, when a particular function is equal to zero. The method works by choosing two values, for example x1 and x2 in which the root of the function or zero must lie between these two values. If zero does not lie between x1 and x2, then the method simply will not work. Since x1 and x2 are either side of zero, then x1 must be less than zero (i.e. negative) and x2 must be greater than zero (i.e. positive). The value of the function exactly half-way between x1 and x2 is then calculated, this point is called xmid. If the value of the function at xmid is greater than zero then the function must have a root that lies somewhere between the interval x1 and xmid. However, if the value of the function at xmid is less than zero then the function must have a root that lies between xmid and x2. By doing this, the range or interval in which the root of the function lies is halved and the solution for when the function equals zero is a step closer to being found. The next stage is simply a repetition of what has just been done. Assuming the value of the function at xmid is greater than zero, then the root must lie between xh and x1. The value of the function exactly half-way between xmid and x1 is then calculated. The interval has now been halved again and is a quarter of its original size. This process is repeated until the root or roots are found. These iterations half the interval at each step and thus "close in" on the solution. If the root is not an integer, then the process could go on indefinitely, unless a degree of accuracy, such as 5 decimal places is stated initially. <heading>T HE P ROJECT</heading>This project will use the bracketing method to solve the equation;  FORMULA  The starting interval or range for the first iteration will be 20, 10 either side of zero. Therefore the lowest value of x or xlow will be -10 and the highest value of x or xhigh will be 10. This starting interval has been chosen because it is quite large and includes both positive and negative values. This will hopefully mean the existing root will be found within this interval. Choosing a smaller interval could mean the solution may exist out of the interval whereas choosing a larger interval such as 100 (50 either side of zero) may simply not be needed as it is too large. The values of xlow and xhigh are also of equal magnitude. In order to solve the equation stated previously, the equation needs to be rearranged so it is equal to zero, this gives;  FORMULA  This equation is then put into the MATLAB computer program to be solved. Two computer programs have been created to solve the equation. The first program defines the equation equal to zero and the second program uses the result of the first program to find the solution to the equation using the bracketing method. (Both of these computer programs can be found in the appendix). The number of iterations used in the computer program needs to be specified too, a value of 30 will be used as this should a sufficient amount of iterations for a solution to be found. When both computer programs were run, a solution was found. Below is a graphical illustration of the rate of convergence produced by the program (Figure 1). <figure/>The red line above represents the xlow value and the blue line represents the xhigh value. It is clear to see that initially xhigh and xlow are apart by an interval of 20, but as the number of iterations increases, they converge and the root of the equation is eventually found. It is clear to see that the rate of convergence for xlow and xhigh is not the same. xhigh appears to converge almost exponentially, whereas xlow seems to converge abruptly and in steps. Although for both, convergence is somewhat rapid, especially considering that the solution was found to 4 decimal places and the starting interval was 20. It is also evident that the solution was found in less than 30 iterations. The solution to the initial equation using the bracketing method has been calculated at 0.5672 to 4 decimal places. The minimum number of iterations required to obtain the solution from the starting interval is 22 iterations. So after this number of iterations, the size of the interval was reduced by a factor of 4194304. However, it should be noted that the xlow value converged on the correct solution after only 18 iterations, whereas the xhigh value converged on this value after 22 iterations, therefore on the 22 nd iteration, the xlow value was equal to the xhigh value. <heading>C ONCLUSION</heading>By using the bracketing method and creating a computer program using MATLAB, the root of the following equation has been found;  FORMULA  A solution of 0.5672 to 4 decimals places was found with the starting interval was set at 20, -10 to +10. This shows that the chosen starting interval was adequate, if not too large and that a smaller starting interval, such as 10 or even 2 would have been suitable. The solution was obtained after 22 iterations. This shows that the value of 30 iterations specified in the computer program was sufficient to find the correct solution. This rate of convergence is linear as at each step the size of the interval halves. The accuracy also increases by a factor of 2 at each iteration. Although the rate of convergence is graphically represented in Figure 1, due to the poor resolution it appears the solution was discovered at about the 13 th iteration rather than the 22 nd iteration. Although the bracketing method found the solution after 22 iterations, some may argue that 22 iterations is too much and takes too long, however the advantage of using the bracketing method is that if the root of the function being investigated is within the starting interval, a correct solution will always be found. The bracketing method is therefore unconditionally convergent. <heading>A PPENDIX</heading> FORMULA  <heading>PART B: ATMOSPHERIC TRAJECTORIES</heading><heading>T HEORY</heading>The Earth's atmosphere is not uniform. It is dynamic and is characterized by jet-streams and eddies. In the atmosphere, when waves reach large amplitudes they break and eddies are formed. Sometimes, this may occur at critical layers in the atmosphere where the phase speed of the wave matches the speed of the jet-stream. If a small-amplitude Rossby wave is formed and hits its critical layer, the atmospheric flow that is formed can be described by a stream-function known as the Stewartson-Warn-Warn stream-function. In two-dimensions, this is given by;  FORMULA  The flow generated by the stream-function gives rise to a pattern of streamlines known as the 'cat's eye pattern'. It contains eddy regions in which the trajectories are closed and stream regions in which air parcels follow trajectories that are not closed. The velocity of the two-dimensional flow within this Stewartson-Warn-Warn stream-function is given by (u component);  FORMULA  and (v component);  FORMULA  <heading>T HE P ROJECT</heading>Using the software MATLAB, a computer program has been created to calculate and illustrate the trajectory of an air parcel carried along by the flow of the Stewartson-Warn-Warn stream-function. An explicit forward scheme has been used to calculate the first step of the flow. For all subsequent steps a leapfrog scheme including a Robert-Asselin filter has been used in the program. (The computer program for this can be found in the appendix). The air parcel will start from position (x0,y0) at time t=0. The computer program has been run to calculate the trajectory of the air parcel from time t=0 to time t=20 using a time-step of 0.01. A value of 0.01 has been used for the Robert-Asselin filter coefficient. The trajectory of an air parcel within the eddy region of the stream-function has been simulated first. The starting positions for this is (x0,y0)=(1.0,1.0). The following (Figure 1) is the plot of the trajectory of an air parcel in the eddy region in the (x,y) plane: <figure/>It is clear to see that with the initial position of (x0,y0)=(1.0,1.0), the path an air parcel would follow in the eddy region is closed and is circular. This therefore verifies the numerical stability of the schemes used as one would expect a closed, circular flow according to the exact solution. The program was then run again, but with the starting positions (x0,y0)=(1.0,2.0). This minor adjustment of the y-value initial position will now simulate the flow within the stream region. The following (Figure 2) is the plot of the trajectory of an air parcel in the stream region in the (x,y) plane: <figure/>It can be seen that by slightly altering the initial starting position for just the y-component, the flow an air parcel would follow if it were under these conditions in the stream region has dramatically changed. The flow is no longer closed or circular. Instead it is sinusoidal and periodic. The stream function just simulated is time-independent resulting in the trajectories being non-chaotic. In reality, however, the trajectories may become chaotic if a weak time-dependent perturbation is added to the Stewart-Warn-Warn stream function. This time-dependent perturbation can be characterized by:  FORMULA  This therefore means the streamfunction now becomes:  FORMULA  The addition of time to the streamfunction will now affect the velocity fields. It can be seen that the time-dependent perturbation is only dependent on the x-component and not the y-component. This now means that the velocity fields of the flow are now given by (u  FORMULA component); and (v component);  FORMULA  The v component was derived by differentiating  FORMULA  with respect to x. The original program has now been modified to include the changes to the velocity fields due to the weak time-dependent perturbations. (The modified program can be found in the appendix). The air parcel will again start from position (x0,y0) at time t=0. The computer program has been run to calculate the trajectory of the air parcel from time t=0 to time t=20 using a time-step of 0.01, the same as before. The following values for the weak time-dependent perturbation have been used; ε=0.1, k=1.0 and c=3.0. The trajectory of an air parcel will begin at the starting position (x0,y0)=(1.00,1.70). The following (Figure 3) is the plot of the trajectory of an air parcel at this starting position in a Stewartson-Warn-Warn streamfunction with a weak time-dependent perturbation; <figure/>Figure 3 illustrates that with the addition of a weak time-dependent perturbation to the streamfunction, the path followed by an air parcel is chaotic and not what would be expected. The trajectory is simulated again, but with slight adjustment to the starting position. The starting position is now (x0,y0)=(1.00,1.71). The following (Figure 4) is the plot of the trajectory of an air parcel at this starting position in a Stewartson-Warn-Warn streamfunction with the same weak time-dependent perturbation; <figure/>It is evident to see that although the starting positions illustrated in Figure 3 and Figure 4 are very close together, when the computer program with the weak time-dependent perturbation was executed, the outcomes are completely different. A difference of only 0.1 for the y value has a huge effect. This shows that by adding a weak time-dependent perturbation, a system can become chaotic if the initial conditions varies only slightly. When the starting position is (x0,y0)=(1.00,1.70), the co-ordinates of x and y at time t=20 are x=9.8014 and y=0.7130, this can be seen in Figure 3. When the starting position (x0,y0)=(1.00,1.71), the co-ordinates of x and y at time t=20 are x=-2.5713 and y=-0.4908, this can be seen in Figure 4. These different values again emphasize that with the addition of a weak time-dependent perturbation to the streamfunction, a minimal variation in initial conditions can have a chaotic effect resulting in completely different values at some point in the future. <heading>C ONCLUSION</heading>The trajectory of an air parcel carried along by the flow of the Stewartson-Warn-Warn streamfunction has been illustrated with varying initial conditions and with the inclusion of a weak time-dependent perturbation. If the streamfunction is considered independently from time, then depending on what the initial co-ordinates are, the flow or trajectory of an air parcel under these conditions will either be closed, i.e. the eddy region or periodic and not closed, i.e. the stream region. This variation can occur with minor adjustments to the initial co-ordinates. The pattern created by this streamfunction forms a 'cat's eye pattern'. When a weak time-dependent perturbation is added to the streamfunction, the pattern formed is irregular and chaotic. Figures 3 and 4 both illustrate that by fractionally adjusting the initial conditions, the co-ordinates of the flow at some future time point are different. These simple simulations illustrate how unpredictable and chaotic the Earth's atmosphere behaves and how difficult weather prediction is. 