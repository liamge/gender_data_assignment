<heading>INTRODUCTION </heading>In accordance with the wishes of the client, SoccerBooker Ltd, this document has been prepared as a successor to the Phase A documentation presented at an earlier stage in the project named on the cover page, and serves as a report on the activities undertaken towards the implementation of the client's requirements detailed in the report for Phase A. This report aims to inform the client of the steps taken to translate the designs, ideas, and foremost, the requirements identified during earlier stages in the project, and demonstrate how these designs have been implemented through the use of Microsoft Active Server Pages, VBScript, and HTML technologies to deliver an interactive, web-based E-Commerce solution. Five of the core requirements have been identified and expanded from the Phase A designs to produce a system which embodies the framework of the larger system and fulfils the major aspects of the intended uses. Upon this framework, further extensions can be easily built, due to it's modular, structured and re-usable design and code in order to fulfil more of the user requirements in future stages of implementation, beyond the scope of this documentation. <heading>References</heading>The implementation of the design for the SoccerBooker Web Application can be found at the following URL from the University of Reading campus LAN:  URL  A number of external references were used in the design and implementation of the system. They are credited here: "ASP In A Nutshell" - A. Keyton Weissinger - ISBN 1-56592-843-1 "ASP.NET For Dummies" - Bill Hatfield - ISBN 0-7645-0866-0 W3 Schools -  URL  ASP Free -  URL  W3C Cascading Style Sheets Information -  URL  <heading>REQUIREMENT: </heading>In order to fully analyse and demonstrate how each of the user's requirements specified in section A of the project have been implemented, it is helpful do document each requirement in a structured manner, along with testable conditions, and to list assumptions and constraints. Due to time constraints, the client has requested that a 'cut-down' set of the original, rich requirements, be selected and implemented, in order to form the framework for the wider application in a short time. As such, five core requirements have been extracted and expanded upon in the table below, along with the associated assumptions and constraints, detailing the semantics of each requirement to be implemented in the design of the web application. Motivation The client, SoccerBooker Ltd, wish to create an on-line presence in the form of an interactive web page, in order to expand their market share by retailing on the internet as well as their current mail-order and telephone ordering activities. Customers should be able to use the site to view, search for, and buy any number of tickets for football matches in all the leagues and competitions in the United Kingdom through the SoccerBooker.com portal. As such the site should be able to allow individual customers to register for an account, to allow purchases to be made, and in the future, the option to create a more personalised experience for the user based on past purchases, favourite teams, and browsing habits, in order to make existing customers feel more valued and increase loyalty and return visits and sales. Specific Requirements The web application shall allow visiting users easy access to browse for a ticket for a specific fixture or fixtures by league, country and team. There shall be a means to search for a particular team using keywords, and within a specific league or competition, and have matching results accurately displayed, with each result linking directly to a team's page. Each team shall have a personalised page featuring summary information about that team, and a list of that team's fixtures in all competitions. Each fixture shall link to a page with information about that particular match, from which it is intended a user will be able to purchase a ticket(s). There shall be a facility for new users to "sign up" for an account on the SoccerBooker.com website by selecting a username and password, and entering their contact details, in order that they might make purchases and log-in on returning visits, their details being stored by the system to save the user from re-entry of their information with each purchase. Additional As a further extension to the above set of basic requirements, team and fixture pages should have the ability to display the club or team crest for each associated team in a fixture, in order to create a more user-friendly and visually appealing look. These badges should be retrieved dynamically for each club and fixture information page using the database system connected to the web application. Assumptions Users of the website will be located (by virtue of their registered address) in the United Kingdom and wishing to purchase tickets for UK domestic leagues and international competitions. Visitors to the site will be using a client using at least 800x600 pixel resolution and displaying a minimum of 256 colours, and a browser capable of executing client-side VBScript programming. The Access Database, and connection to it, are via a secured connection and server over which personal information and passwords can be transmitted, and on which such data can be stored. Constraints The implementation must be installed for operation on the Douglas server. The implementation shall use ASP, VB Script and an Access Database. No other technology than that indicated in constraint iii may be used in the submitted implementation. Club badges and logos are to be stored on the web server and access and displayed as dynamic images. The Search facility on the site is restricted to the accuracy of the SQL 'LIKE' function it is implemented using. Customers will not be able to select specific seats in a given football ground, but will be allocated them automatically (thought this could be changed with future additions). COMMENT Development of the SoccerBooker.com website demonstrated a number of recurring patterns and themes. Foremost of these is the "development curve" experienced during coding. Laying the initial foundations, structuring the pages and code, and considering designs and possible solutions to problems proved a slow and painstaking process. However, as sections of code were written and page layouts defined, creating new areas of the site became increasingly easier - code could be re-used, formats duplicated, and linking header files containing database connection information and Cascading Style Sheets (CSS) to give the site a common theme gradually reduced the workload and dramatically cut down the time to develop new areas of the site. The work was full of difficulties, the majority of which were solved using a trial-and-error approach, commonly involving commenting out extraneous sections of code in order to find a working base from which more and more sections could be commented back in, to find erroneous lines. Some of the errors encountered including using VBScript, ASP and SQL reserved words as names for variables, data type mismatches (whereby the scripts on the page attempt to submit or retrieve a particular data type that does not correspond with the database's data type or the user' input). However, through these difficulties a great deal of insight into the development of ASP-based web applications has been gained, including the differences between the Classic ASP used here and Microsoft's current product, ASP.NET. The final result though has been thoroughly successful in achieving the functionality required, and forms a good framework for the addition of further features due to it's modularity and layout. 