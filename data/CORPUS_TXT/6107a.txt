<heading>The 1 st order filter: </heading> FORMULA  The difference equation for the filter is found by  FORMULA  The term "Z" refers to inverse past value. Hence Z raised to the -1 power refers to a past value, Z raised to the -2 refers to two past values, etc. The denominator of the Z transform refers to feedback paths. The numerator refers to feed forward paths. Feed forward paths are positive; feedback paths are always negative. For FIR filters, all the feedback terms in the denominator are zero. Then  FORMULA  The block diagram implementation of this filter <figure/><heading>The 2 nd order filter</heading> FORMULA  The difference equation for the filter is found by  FORMULA   FORMULA  The term "Z" refers to inverse past value. Hence Z raised to the -1 power refers to a past value, Z raised to the -2 refers to two past values, etc. The denominator of the Z transform refers to feedback paths. The numerator refers to feed forward paths. Feed forward paths are positive; feedback paths are always negative. For FIR filters, all the feedback terms in the denominator are zero. Then  FORMULA  The block diagram implementation of this filter <figure/><heading>Comparison with other filters:</heading>Except for Butterworth, there are several other filter, such as Chebyshev, elliptic, Bessel and etc. Compared with them, the Butterworth filter has a slower roll-off, and thus will require a higher order to implement a particular stopband specification. However, the Butterworth is the only filter that maintains this same shape for higher orders (but with a steeper decline in the stopband) whereas other varieties of filters have different shapes at higher orders. What's more, Butterworth filter will have a more linear phase response in the passband than the Chebyshev and elliptic filters. <heading>Comparison with other methods</heading>There are several methods for mapping analog filters to digital filters, such as Invariant impulse, Invariant Step, and Bilinear transformation, etc. None of the techniques are perfect, but in general the Bilinear transformation maps the entire frequency response of the desired filter, the Impulse Invariant transformation preserves the impulse time response, and the Step Invariant preserves the step time response. So, if required frequency performance, such as filtering a variable in a dynamic frequency sensitive environment, the best choice is the Bilinear transformation. It is the BZT method we have been taught and I used in designing the filter. The discrete sampling of digital filters produces aliasing for frequencies at or exceeding half the sample rate. In the case of the Bilinear transformation, the entire continuous frequency spectrum is mapped to the discrete unit circle. This produces frequency warping errors throughout the digital frequency response. This error shows up as an incorrect cutoff frequency for low pass and high pass filters. It is generally a design critical practice to sample at least twice as fast as the highest frequency, ( FORMULA ) that is expected to pass through the filter so that the effects of frequency warping are minimized. With pre-warping techniques, ( FORMULA ) the original pass band frequency response can be preserved. In my filter design, I also used pre-warping method to modify the analog cutoff frequency to digital cutoff frequency. <heading>Some knowledge about Butterworth filter learned from the lab and references:</heading>A low-pass filter passes relatively low frequency components in the signal but stops the high frequency components. The so-called cutoff frequency divides the pass band and the stop band. In other words, the frequency components higher than the cutoff frequency will be stopped by a low-pass filter. This type of filter is especially useful since the random errors involved by relatively high frequency contents. The frequency response of the Butterworth filter is maximally flat (has no ripples) in the passband, and rolls off towards zero in the stopband. A standard Butterworth Filter's pass band attentuation is  FORMULA . When viewed on a logarithmic Bode Plot, the response slopes off linearly towards negative infinity. For a first-order filter, the response rolls off at âˆ’20 dB per decade. For a second-order Butterworth filter, the response decreases at -40 dB per decade, a third-order at -60 dB, and so on. So, in a word, Butterworth filters are characterized by a magnitude response that is maximally flat in the passband and monotonic overall. <figure/><figure/><heading>How to tackle with Quantization Errors</heading>From the diagram result of step and impulse response , I found that the magnitude of filtered with ADC/DAC is a bit lower than the only filtered one. The filtered frequency response of signal + noise, though much better than the non-filtered ones, it still exists some quantization noise. So it is not exactly as good as the original one. ADC/DAC introduces and magnifies rounding errors for large filters. As required, the filter is 3 rd for this lab. The rounding or quantization error, increases as the arithmetic precision of the filter decrease. If filter is unstable or contains quantization noise, there are several options: <list>increase the precision of the filterdecrease the order of the filterdecrease the sampling rateuse a more precise processor (if possible) </list><heading>Conclusion</heading>I learned lots of useful practical knowledge from this DSP lab. The 3 2-hours-session made me proficient in using Matlab dealing with DSP problem. When confronting with some difficulties in analyzing the results, I referred to a few books and understand more about digital signal processing from related information. The whole lab work is like a small project, from design to realization. I can see how industry works step by step through it. Finally, I have proven that the design met the 3 rd order Butterworth filter specification by testing my "z" domain filter descriptions using Matlab. Many thanks to my tutor Dr.  and my partner . 