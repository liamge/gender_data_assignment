<heading>Title</heading>The title I propose for my third year project (CS 310) is Secure Transaction Main-Frame. The software system will support interoperable machine-to-machine interaction over a network, providing transaction service to online merchants with fraud detection capabilities and desktop application to view and analyse the transactions. <heading>Problem</heading>In today's increasingly electronic society and with rapid advances of electronic commerce on the Internet, the use of credit card for purchase has become convenient and necessary. The growing number of credit card transactions provides more opportunities or thieves to steal customer details and subsequent commit fraud. When bank lose money because of credit card fraud, cardholder pays for all that loss through higher fees and reduced benefits. Payment processing in the online world is similar to payment processing in the offline or "brick and mortar" world, with few exceptions. In the online world, the store and the transactions are virtual. This means the card is not present at the transaction and the transaction information is submitted and processed via the merchant store network. The payment processing can be divided into two parts: <list>AuthorisationSettlement</list><picture/><list><heading>Authorisation Phase</heading>Customer decides to make purchase on Merchant WebsiteMerchant Website sends transaction details to Payment GatewayThe Payment Gateway routes information to ProcessorThe Processor sends information to issuing bank.The Issuing bank sends transaction result.The Processor sends result to Payment GatewayThe Payment Gateway sends result to Merchant.</list>Settlement Phase The Second phase is the settlement process during which money is transferred from the customer's account to the merchant's account. <heading>Objectives</heading><heading>What to Look for in a Payment Processing Solution? </heading>Reliable and cost effectively accept and process a variety of payment types, including credit cards and electronic checks. Provide real-time credit card authorisation results allowing the client to accept or reject orders immediately reducing the risks of fraudulent transaction. Be able to act as virtual terminal to allow for processing offline transactions. This gives you the flexibility to process orders received via telephone, fax, and email or in person. Strong fraud detection capabilities and methods to make it harder for fraudsters. <picture/>The aim of the project is to offer a secure transaction main-frame to the merchant, who gain the ability to free themselves from the difficult to integrate payment systems with their online systems, reaping the benefits of the system designed specifically to their needs. In this web-service based model, issuing bank plays the role of service provider and online merchant of service consumer. <heading>Database Design</heading>The first phase of the project involves designing the database for the project. The database will be designed in SQL 2000. The SQL Server will hold extensive tables and various database designed for various functionalities. Each database and table will have further security permission so that no miss-use of data takes place. <heading>Fraud Detection Engine.</heading>The true prospect for success of transaction and best practices in fraud prevention is almost dependent on designing a complex Fraud Detection Engine. The Engine will be designed to understand the pattern of transactions and analyses customer data to identify link to previous frauds. It would also involve active use of customer and fraud data to identify any links between active fraud cases that indicates possible conspiracy or area of common susceptibility. Using neural network models and extensive data integration capabilities, will help in reducing the number of fraud identities. The risk of the transaction would be presented in terms of score and reason codes describing which factor had the greatest impact on the fraud score. <heading>Web - Service.</heading>The next phase involves designing a web-service, which can be integrated with the merchant online payment system, and providing a transaction authorisation facility. The web service will be referenced from a web form where the user would be requested to enter all the payment details. The data will securely travel from Web-form to the Web-Service (https). The Web-Service will conduct the basic test against the transaction in order to check for the transaction to be fraudulent. <heading>ASP.NET Application.</heading>The next step involves designing the ASP.NET Application from where the web-service would be referenced. In order to make the Transaction a valid transaction and not a fraud, SMS Text message will be sent to customer mobile number present in the database through the .NET Application. Fraud will always be a risk but with this added functionality it would be much harder for perpetrator to succeed. <heading>Desktop Application (Transactions Application)</heading><picture/>The transaction desktop application will provide an integrated environment for fraud management activities. It will give the user the opportunity to view all the transactions and the system outcome for each transaction. The application would also give functionality to view and download Crystal reports designed in .NET. A range of analysis tools will be provided in the Application including viewing of Customer Data, Transaction History, and Fraud tickets etc. The Business Logic will contain the data, which will be shared by the entire client such a Connection string to the database and other common information. The desktop application would give the client an offline facility to input transaction details and settle a payment. <heading>Security</heading><picture/>Providing Secure Network Communication over the Secure Socket Layer and encryption of critical customer data. The addition of SSL Certificate will allow customer to submit information online with assurance that the information sent such as credit card details and personal details are protected from interception and alteration over the web. <heading>Testing</heading>Software testing will happen identify the correctness, completeness and quality of the developed software. Test would be performed on the application and comparing the results expected with the results provided by the software system. <heading>Deployment</heading>The final phase of the project would involve deploying the project. The desktop application would be provided as an exe file, which would include the project files. <heading>Methods</heading>In designing of this project many features would be dependent on each other. In order to achieve all successfully the project would be divided into different phases. The Phase I would involve designing the database and the fraud detection engine. The fraud detection model would be based on the database structure the way tables would be structured. The next part would involve designing the web-service, which would securely communicate to the database. The web-service would be designed to provide basic test over the client side before communicating with the database. The last part of Phase I would be involved creating an ASP.NET Web Application. This web application would serve as the payment page where the users would be directed from the customer's site and on entering the information the data would travel from Web Application to the Web-Service over the secure channel. The Phase II would involve designing the desktop application. The Desktop application will be designed in order to help the merchant's employee to view various activities and results of transactions. The Application would also act as a virtual machine giving user the functionality to take payments over the phone and enter customer information. The Phase III would involve applying the security over the application. Windows 2000 Server would be used as the certificate issuing authority and data would travel from one part to another in an encrypted format. The Phase IV would involves testing and deployment of the project. <heading>Timetable</heading>Please see the separate chart included. <heading>Resources</heading>The application will be implemented using .NET Technology. This was chosen due to many reasons such platform independence and easy integration of application with the systems. The language used for developing both Web-Service and Desktop Application is VB.NET. SQL Server 2000 would support the application. The Security issue of the application will be dealt by using Windows 2000 Server as the Certificate Issuing Authority (https). 