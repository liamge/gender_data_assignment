<abstract><heading>Abstract</heading>The major concern of this assignment is to develop MATLAB code in order to design and compare controllers for various systems consisting of a proportional controller, the Modified Ziegler-Nichols (MZN) PID controller and the Bode's Maximum Available Feedback (MAF) design method. The main feature of controller design methodology for effective feedback control system is that it has been designed to achieve high loop gain and stability for a given bandwidth and system specification. The MATLAB codes proposed in this assignment have been implemented and tested with given relevant test systems. The experimental results show that the Bode's Maximum Available Feedback (MAF) design method seems the best feedback controller design method. </abstract><heading>1. Introduction</heading>Control theory deals with the behavior of dynamic systems. A closed loop control system or feedback control system play a vital role in the improvement of the control of dynamic system. The main advantage of feedback control system is that a feedback loop can achieve the setpoint and reduce the effect of the variation of process characteristic of a control system, resulting from external disturbances, for example [1], [2]. The closed loop transfer function is  FORMULA  and the closed loop disturbance transfer function is  FORMULA  As can be seen from equation (1) and (2), if  FORMULA  or loop gain is high, the output will be independent of A and it will not be affected by external disturbance. The feedback control system should, therefore, have high loop gain with stability. To avoid instability, a controller should be added to the feedback control system. A proportional control is a solution to this. The property of the proportional controller is simply proportional to the control error in case that error is small [1]. The proportional controller (k) is 1/gain at angular frequency when the phase is -180+phase margin. The loop transfer function will then be proportional controller gain*original transfer function. The disadvantage of this controller, however, causes a steady state error. The PID control can therefore alleviate this problem. A PID controller is by far the most common feedback loops component in industrial process control system. This controller provides three terms: the proportional term (P) is proportional to the error, the integral term (I) is proportional to the integral of the error and the derivative term (D) is proportional to the time derivative of the control error [1]. The advantages of such a controller are that the steady state error will be eliminated and the transient response when transfer function is a second order will be improved [2]. The Modified Ziegler-Nichols (MZN) PID controller is one of the more common way of tuning PID loop. The controller can be shown as:  FORMULA  The need to effective feedback control system is a large loop gain over a wide range of low frequency. In other words, the bandwidth must be wide. The loop gain is, however, limited because of the dependence of the phase shift on change of gain. To deal with this issue, the Bode's Maximum Available Feedback (MAF) design method was purposed. The bandwidth over maximum possible loop gain, gain and phase margin must be specified for this design method. This methodology provides a final loop transfer function:  FORMULA  <heading>2. Implementation</heading>This assignment was divided into 6 tasks. <heading>Task 1</heading>In this task, the function pf0607find in pf0607.m was implemented. This function was used to find gain (m), phase (p) and angular frequency (w) at particular position (pos) which is near specified value (WHAT). To achieve this, Bode(num, den) command was firstly called to obtain the values of gain, phase and angular frequency in vector form. The value of pos can be found by using the command as following.  FORMULA  Some codes were added to check the size of pos because the two or more position (pos) at the same values may occur. In this case, only one value of pos was chosen in order to avoid the stopping of the operation of program. Furthermore, the need to check for the pos at the beginning or end of array is important. The codes for the extension of the range of angular frequency were added in this program. This angular frequency logarithmically spaced in the range w[pos-1] to w[pos+1]. The new range of angular frequency can be obtained by using logspace(log10(w(pos-1)),log10(w(pos+1))). Further iterations will provide more accuracy of results. The Bode command was called all over again in specify angular frequency until the values of gain or phase reached the accurate results set at 0.0001 for the difference between gain or phase and WHAT. The codes in this task, finally, return the values of gain, phase and angular frequency. The more detail can be seen in appendix. <heading>Task 2</heading>There are two parts in this task. First, the system was taken as specified in arguments to this program (pf0607) and then turned into a structure. The structures for uncompensated and designed systems were defined as a 'struct sys' with the following.  FORMULA  Second, a proportional controller for such system was designed with 45 phase margin by the following function. function des = pf0607prop (sys, pm, dofreqtime) To find a proportional controller, a system 'sys' was turned to a design 'des' at first. The function pf0607find from task1 was then used to find angular frequency and gain when the phase is -180+PM. A proportional controller was then calculated by the following algorithm.  FORMULA  The new numerator of loop transfer function of designed system including the gain of the proportional controller can be found by des.num = des.num*k. The frequency and time domain performances were called by the following codes respectively.  FORMULA  A string version was returned by using fnumstostr. The more detail can be seen in appendix. <heading>Task 3</heading>The code in this task was written to find frequency domain performance which is d.c. loop gain of the system (DCG), the actual bandwidth (b/w), the actual gain margins (GM) and phase margins (PM) and also to find time domain performance which is time to peak(Tpk), %overshoot(%os) and steady state output (Oss). The d.c. loop gain of the system can be found by using Bode command to find the gain where angular frequency is zero. The actual bandwidth (b/w) can be found by using the function pf0607find to find angular frequency where the gain is  FORMULA . The d.c. loop gain and actual bandwidth was, however, set to Inf and NaN respectively, in case that the d.c. loop gain of the system is infinite. The actual gain and phase margins can be also found by using the function pf0607find to find the gain where phase is -180 and the phase where gain is 1 respectively, before the actual gain and phase margins are calculated by the following algorithm.  FORMULA  The codes for adding polynomials were generated in order to find the closed loop transfer function. The time domain performance was then found by calling the STEP command on the closed loop transfer function. The search for time to peak can be achieved by finding the time where the response is maximal. The steady state output is the gain where angular frequency, whereas the percent overshoot was found by the following algorithm.  FORMULA  where M pf is the peak value of response A string version was then returned by using fnumstostr. The more detail can be seen in appendix. <heading>Task 4</heading>In this task, the Modified Ziegler Nichols (MZN) PID controller was designed by the implementation of following function.  FORMULA  This function returns in 'des' with a PID controller. The code for this function was implemented by using Bode command after a system 'sys' was turned to a design 'des' in order to find the gain and phase of uncompensated system at a particular frequency (w) and then find the difference between desired and actual phase (dph) at a particular frequency (w). The MZN PID controller was designed in the following form.  FORMULA  The values of K P, T i and T d can be found by the following algorithm.  FORMULA  The new loop transfer function will then be C(s)*Plant P(s). The frequency and time domain performances were called by the following codes respectively.  FORMULA  A string version was returned by using fnumstostr. The more detail can be seen in appendix. <heading>Task 5</heading>This task is to design the compensated system by using Bode Maximum Available Feedback method. The codes have been written to find the maximum possible loop gain over a specified bandwidth, gain margin and phase margin and to find the corner frequency. The code was generated to calculate the frequency when gain is 1 (w a) by using the function pf0607find. After that, each parameter was calculated by the following formulae.  FORMULA , for finding relative phase margin  FORMULA  , for finding the reciprocal of the gain margin  FORMULA , for finding the end angular frequency of the Bode Step  FORMULA , for finding the start angular frequency of the Bode Step  FORMULA , for finding the maximum loop gain over a specified bandwidth These parameters produce the loop transfer function in the following form.  FORMULA  The frequency and time domain performances were called by the following codes respectively.  FORMULA  A string version was returned by using fnumstostr. The more detail can be seen in appendix. <heading>Task 6</heading>This task is to combine the design of an uncompensated system, proportional controller, the MZN PID controller and bode maximum available feedback in the form of struct array. First of all, the codes for an uncompensated system have been written. The three compensated systems were combined by calling the function pf0607prop, pf0607pid and pf0607bode in task 2,4 and 5 in order. Finally, the function pf0607plot(syss) was written to plot the results as graphs. The code for this is shown in appendix. <heading>3. Testing</heading>The code in each task was tested by system 0 which is defined as an uncompensated system (NUM/DEN) with BETA in feedback path as shown below:  FORMULA  with relevant data before testing all systems by using data in form as data = [pm for Prop, w, pm for PID, w, gm, pm for bode] which is  FORMULA  The results will be compared with the answer for test system-graphs If the results is correct, this program will be tested by five different systems as shown below.  FORMULA  For system5, K and specified data must be found in case of Bode and PID: %os = 25; T pk = 1s ± 5% To achieve this, this system was, therefore, set by K = 408 and data = [45, 2.83, 41, 0.15, 15, 54]. <heading>4. Results</heading><figure/><table/>The string fields for the 3 designed systems have been shown as below.  FORMULA  On system1, the results show that this system is stable on all designed methods. A proportional control is the slowest system and the percent overshoot of response is quite high; furthermore, the steady state error is highest, compared with the other controller. The MZN PID control is the fastest system, but the percent overshoot of response is still high. This causes more oscillatory. Whereas bode design is slower, but the percent overshoot of response is lower than that of the MZN PID control although it is higher than 20%. In addition, the Bode design can reduce disturbance over more range of frequency as shown in figure 1. The MZN PID control reduce more disturbance than bode method at low frequency until around 0.018 rad/s, while the Bode design reduce more disturbance than the MZN PID control between 0.018 and 0.12 rad/s. <figure/><table/>The string fields for the 3 designed systems have been shown as below.  FORMULA  On system2, the results show that this system is stable on all designed methods. A proportional control is the slowest system and the percent overshoot of response is quite high; furthermore, the steady state error is highest, compared with the other controller. The percent overshoot of responses of Bode design and the MZN PID control is slightly different. That of Bode design seems lower than the MZN PID control. The MZN PID control, however, appears the fastest system and also reduce disturbance over more range of frequency. <figure/><table/>The string fields for the 3 designed systems have been shown as below.  FORMULA  On system3, the results show that this system is stable on all designed methods. The times to peak for these designs are almost the same, but the percent overshoot of response and steady state error of a proportional control are quite high, compared with the other controller. The Bode design seems better than the MZN PID control. This is because it appears faster than the MZN PID control and the percent overshoot is lowest. Moreover, the Bode design can reduce disturbance over more range of frequency and seems no positive feedback over all frequency. <figure/><table/>The string fields for the 3 designed systems have been shown as below.  FORMULA  On system4, the results show that this system is stable on all designed methods. The times to peak for these designs are almost the same, but the percent overshoot of response and steady state error of a proportional control are quite high, compared with the other controller. The bode design seems better than the MZN PID control. This is because bode design appears faster than the MZN PID control, whereas the percent overshoot of the MZN PID control is higher than bode design and also more oscillatory. Furthermore, the Bode design can reduce disturbance over more range of frequency. <figure/><table/>The string fields for the 3 designed systems have been shown as below.  FORMULA  On system5, the bode design provides a slight lower phase margin than a desired phase margin. In addition, the Bode design can reduce disturbance over more range of frequency as shown in figure 5. The MZN PID control reduce more disturbance than bode method at low frequency until around 0.018 rad/s, while the Bode design reduce more disturbance than the MZN PID control between 0.018 and 0.159 rad/s. <heading>5. Discussion</heading>The three compensated system designs have been presented in this assignment. These designed methods consist of the proportional control design, the Modified Ziegler-Nichols (MZN) PID control design and the Bode maximum available feedback design. In case of pure proportional control, the control action is simply proportional to the control error. However, there are some limitations in a proportional control. Such a control method results in a large number of steady state errors as shown in the experimental results. The MZN PID control might be the solution to this problem. This control method includes the term of the integral action which is proportional to the time integral of the error. This experimental results show that the steady state error always becomes zero. The Bode maximum available feedback design method is an alternative way to design a controller. Based on the experimental results, the Bode maximum available feedback design method seems the best design method. The reason for this is that such a design method provides the lowest percent overshoot of response and also provide the fastest system except system 1 and 2 in which show that the MZN PID control is faster than the Bode maximum available feedback design method. Moreover, not only is Bode's method fast and less oscillatory, but also the rejection of disturbance. This methodology is more likely to reduce disturbance at a wide range of angular frequency, compared with the MZN PID control. <heading>6. Conclusions</heading>This assignment presents the design of controller with a single feedback loop and the comparison with each design method. The MATLAB codes were developed in order to design of the parameters of feedback control system and tested with various systems. Based on these results, it is more likely that a proportional control appears a slowest response and far more steady state error. Furthermore, the effect of disturbance cannot be rejected and also more oscillatory. The Modified Ziegler-Nichols (MZN) PID control improves in frequency and time domain performance such as high loop gain and the fastest response in some systems, but a bit more oscillatory. The steady state error can be eliminated and the rejection of disturbance is moderate. The Bode's Maximum Available Feedback (MAF) design method is generally the fastest response and provides maximum possible loop gain over a given bandwidth. Moreover, this method reduce disturbance effectively over a wide range of angular frequency. It can be said that the Bode's Maximum Available Feedback (MAF) design seems the best method. However, the robustness of control system should be tested. 